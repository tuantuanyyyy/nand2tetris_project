// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.
    
    //将address的前三位转为8个信号位，这8个信号位主要是用来选第几个RAM8
    //address的后3位用来给RAM8使用，再具体选择哪个Register
    DMux8Way(in= load, sel= address[0..2], a= load0, b= load1, c= load2, d= load3, e= load4, f= load5, g= load6, h= load7);
    
    
    RAM8(in=in, load=load0, address=address[3..5], out=u0);
    RAM8(in=in, load=load1, address=address[3..5], out=u1);
    RAM8(in=in, load=load2, address=address[3..5], out=u2);
    RAM8(in=in, load=load3, address=address[3..5], out=u3);
    RAM8(in=in, load=load4, address=address[3..5], out=u4);
    RAM8(in=in, load=load5, address=address[3..5], out=u5);
    RAM8(in=in, load=load6, address=address[3..5], out=u6);
    RAM8(in=in, load=load7, address=address[3..5], out=u7);

    Mux8Way16(a= u0, b= u1, c= u2, d= u3, e= u4, f= u5, g= u6, h= u7, sel= address[0..2], out= out);
}